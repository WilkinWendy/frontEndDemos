/**
 * unknown
 * unknown
 *
 * OpenAPI spec version: last
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

import ajax, { AjaxPromise, ExtraFetchParams } from '@ajax';
import * as models from '../model/models';

/* tslint:disable:no-unused-variable member-ordering object-literal-shorthand */

/**
  * 用户
  */
export type ParamsBodyapiUserAddPost = models.ApiUserAddBody;
/**
  * @property `[id]` 
  */
export interface ParamsapiUserDeletePost {
  // queryParams
  id?: string;
}
/**
  * raw paramter
  */
export type ParamsBodyapiUserDeletePost = string;
/**
  * @description apiUserGetByIdGet参数
  * @property `[id]` 主键id
  */
export interface ParamsapiUserGetByIdGet {
  // queryParams
  /**
   * 主键id
   */
  id?: string;
}
/**
  * 用户
  */
export type ParamsBodyapiUserUpdatePost = models.ApiUserUpdateBody;
export class UserApi {
  protected $basePath = ''.replace(/\/$/, '');

  public constructor(basePath?: string) {
    if (basePath !== undefined) {
      this.$basePath = basePath.replace(/\/$/, '');
    }
  }

  /**
   * 
   * @summary 新增用户
   
   * @param data: ParamsBodyapiUserAddPost// 用户
   * @param opt ajax config
   * @returns models.ApiUserAdd
   */
  public apiUserAddPost = (
    
    data: ParamsBodyapiUserAddPost,opt?: ExtraFetchParams
  ) : AjaxPromise<models.ApiUserAdd>  => {
    const path = '/api/user/add';
    const url = this.$basePath + path;
    const p: any = {};
    p.data = data;
    return ajax.ajax({
      ...opt,
      method: 'POST',
      url,
      ...p
    }, path, this.$basePath);
  }
  /**
   * 
   * @summary /api/user/delete
   * @param params ParamsapiUserDeletePost
   * @param data: ParamsBodyapiUserDeletePost// raw paramter
   * @param opt ajax config
   * @returns models.ApiUserDelete
   */
  public apiUserDeletePost = (
    params: ParamsapiUserDeletePost,
    data: ParamsBodyapiUserDeletePost,opt?: ExtraFetchParams
  ) : AjaxPromise<models.ApiUserDelete>  => {
    const path = '/api/user/delete';
    const url = this.$basePath + path;
    const p: any = {};
    p.query = {};
    if ('id' in params) p.query.id = params.id;
    p.data = data;
    return ajax.ajax({
      ...opt,
      method: 'POST',
      url,
      ...p
    }, path, this.$basePath);
  }
  /**
   * 
   * @summary 根据用户id获取用户信息
   * @param params ParamsapiUserGetByIdGet
   
   * @param opt ajax config
   * @returns models.ApiUserGetById
   */
  public apiUserGetByIdGet = (
    params: ParamsapiUserGetByIdGet,
    opt?: ExtraFetchParams
  ) : AjaxPromise<models.ApiUserGetById>  => {
    const path = '/api/user/getById';
    const url = this.$basePath + path;
    const p: any = {};
    p.query = {};
    if ('id' in params) p.query.id = params.id;
    return ajax.ajax({
      ...opt,
      method: 'GET',
      url,
      ...p
    }, path, this.$basePath);
  }
  /**
   * 
   * @summary /api/user/update
   
   * @param data: ParamsBodyapiUserUpdatePost// 用户
   * @param opt ajax config
   * @returns models.ApiUserDelete
   */
  public apiUserUpdatePost = (
    
    data: ParamsBodyapiUserUpdatePost,opt?: ExtraFetchParams
  ) : AjaxPromise<models.ApiUserDelete>  => {
    const path = '/api/user/update';
    const url = this.$basePath + path;
    const p: any = {};
    p.data = data;
    return ajax.ajax({
      ...opt,
      method: 'POST',
      url,
      ...p
    }, path, this.$basePath);
  }
}

export default new UserApi();